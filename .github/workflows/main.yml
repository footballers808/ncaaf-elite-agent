name: NCAAF Elite Agent

on:
  # Scheduled daily run (UTC) – adjust as you like
  schedule:
    - cron: "15 12 * * *"
  # Manual trigger with inputs to choose mode
  workflow_dispatch:
    inputs:
      mode:
        description: "What to run?"
        type: choice
        options:
          - run        # normal predict → label → learn → report
          - backtest   # historical simulation
          - tune       # grid search tuner
        default: run
      years:
        description: "Backtest years (e.g. 2022,2023). Used when mode=backtest."
        required: false
        default: ""
      season_type:
        description: "Season type for backtest"
        type: choice
        options: [regular, postseason, both]
        default: regular

permissions:
  contents: read

jobs:
  agent:
    runs-on: ubuntu-latest
    env:
      # always needed
      CFBD_API_KEY: ${{ secrets.CFBD_API_KEY }}
      # only used in run mode (mailer picks them up)
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      SMTP_FROM: ${{ secrets.SMTP_FROM }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ----------------------------
      # MODE: run (default)
      # ----------------------------
      - name: Run NCAAF Elite Agent
        if: ${{ inputs.mode == 'run' || github.event_name == 'schedule' || github.event_name == 'push' }}
        run: |
          # Ensure repo root is importable (so 'import main' works)
          export PYTHONPATH="${GITHUB_WORKSPACE}:$PYTHONPATH"
          # Prefer the package entrypoint that delegates to root main.py
          python -m src.main || python main.py

      - name: Upload outputs & history
        if: always() && (inputs.mode == 'run' || github.event_name == 'schedule' || github.event_name == 'push')
        uses: actions/upload-artifact@v4
        with:
          name: run-outputs
          path: |
            outputs/**/*.csv
            outputs/**/*.json
            outputs/**/*.parquet
            outputs/**/*.txt
            history/**/*.csv
            store/**/*.parquet
          if-no-files-found: ignore

      # ----------------------------
      # MODE: backtest
      # ----------------------------
      - name: Run backtest
        if: ${{ inputs.mode == 'backtest' }}
        shell: bash
        run: |
          set -euo pipefail
          YEARS="${{ inputs.years }}"
          if [ -z "$YEARS" ]; then YEARS="2023,2024"; fi
          python -m src.backtest --years "$YEARS" --season-type "${{ inputs.season_type }}" --out backtest_out

      - name: Upload backtest results
        if: ${{ inputs.mode == 'backtest' }}
        uses: actions/upload-artifact@v4
        with:
          name: backtest-results
          path: backtest_out/
          if-no-files-found: error

      # ----------------------------
      # MODE: tune
      # ----------------------------
      - name: Run tuner sweep
        if: ${{ inputs.mode == 'tune' }}
        run: |
          python -m src.tune_config

      - name: Upload tuning results
        if: ${{ inputs.mode == 'tune' }}
        uses: actions/upload-artifact@v4
        with:
          name: tuning-results
          path: tuning_out/
          if-no-files-found: error
